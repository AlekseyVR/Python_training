{
  "uid" : "155896071ae9a772",
  "name" : "test_edit_group_name",
  "fullName" : "test.test_edit_group#test_edit_group_name",
  "historyId" : "1c33008695995dfcba03a98350d2f84a",
  "time" : {
    "start" : 1600124666127,
    "stop" : 1600124667042,
    "duration" : 915
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [174:;;, 176:...ShCX2Lsr, ...] == [174:;;, 176:...ShCX2Lsr, ...]\n  At index 21 diff: 200:nameOj;footerAb0j 2f0;logoP2G MySl4hC != 200:Modify group;footerAb0j 2f0;logoP2G MySl4hC\n  Use -v to get the full diff",
  "statusTrace" : "app = <fixture.application.Application object at 0x03CB9A78>, db = <fixture.db.DbFixture object at 0x03CB97D8>\ncheck_ui = False\n\n    def test_edit_group_name(app, db, check_ui):\n        if app.group.count() == 0:\n            app.group.create(Group(name_group=\"test_for_ed_nm_grp\"))\n        old_groups = db.get_group_list()\n    \n        group = random.choice(old_groups)\n        new_group_data = Group(name_group=\"Modify group\")\n        app.group.modify_group_by_id(group.id, new_group_data)\n        new_groups = db.get_group_list()\n        assert len(old_groups) == app.group.count()\n        group.name = new_group_data.name_group\n>       assert old_groups == new_groups\nE       assert [174:;;, 176:...ShCX2Lsr, ...] == [174:;;, 176:...ShCX2Lsr, ...]\nE         At index 21 diff: 200:nameOj;footerAb0j 2f0;logoP2G MySl4hC != 200:Modify group;footerAb0j 2f0;logoP2G MySl4hC\nE         Use -v to get the full diff\n\ntest\\test_edit_group.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1600124601790,
      "stop" : 1600124601798,
      "duration" : 8
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "stop",
    "time" : {
      "start" : 1600124601790,
      "stop" : 1600124601790,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "check_ui",
    "time" : {
      "start" : 1600124666127,
      "stop" : 1600124666127,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "app",
    "time" : {
      "start" : 1600124666125,
      "stop" : 1600124666127,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "afterStages" : [ {
    "name" : "db::fin",
    "time" : {
      "start" : 1600124672649,
      "stop" : 1600124672649,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "stop::fin",
    "time" : {
      "start" : 1600124671832,
      "stop" : 1600124672647,
      "duration" : 815
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_edit_group"
  }, {
    "name" : "host",
    "value" : "verzhinskiy-nb"
  }, {
    "name" : "thread",
    "value" : "102296-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_edit_group"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "155896071ae9a772.json",
  "parameterValues" : [ ]
}